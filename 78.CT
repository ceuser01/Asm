<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="38">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"iat"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(filea,KERNEL32.CreateFileA)
Registersymbol(filea)
define(wirte,KERNEL32.WriteFile)
Registersymbol(wirte)
define(CloseH,KERNEL32.CloseHandle)
Registersymbol(CloseH)
define(findx,KERNEL32.FindFirstFileA)
Registersymbol(findx)
define(fnext,KERNEL32.FindNextFileA)
Registersymbol(fnext)
define(fcloseh,KERNEL32.FindClose)
Registersymbol(fcloseh)
//KERNEL32.CloseHandle
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"API(00431000~00500100"</Description>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(mainx,00431000)
Registersymbol(mainx)
define(sizegetx,mainx+1000)
Registersymbol(sizegetx)

define(debuga,00451000)
Registersymbol(debuga)

define(SleepX,00452000)
Registersymbol(SleepX)
define(PointerACC1,00453000)
Registersymbol(PointerACC1)

PointerACC1:
add [Poin1],40
ret

SleepX:
push 80000000
call sleep

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"satic 문자열 00F02000~01202000"</Description>
      <LastState/>
      <Color>FF00FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

define(dataget,00680150)//50byte
Registersymbol(dataget)//50byte

define(acPath,00685100)//50byte
Registersymbol(acPath)//50byte

define(countdbvmx,00685200)//50byte
Registersymbol(countdbvmx)//50byte

define(nullp,00685300)//50byte
Registersymbol(nullp)//50byte


define(Error41,00685600)//50byte
Registersymbol(Error41)//50byte





Error41:
db 'Error dbvmnullPointer'

nullp:
push Error41
call msvcrt.printf
add esp,4
push 800000000
call sleep

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"4Byte Satic"</Description>
      <LastState/>
      <Color>00FF00</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(sizes,00680100)
Registersymbol(sizes)

define(filehandles,00680104)
Registersymbol(filehandles)

define(countX2,00680108)
Registersymbol(countX2)

define(countX3,0068010c)
Registersymbol(countX3)
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Pointer"</Description>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(Poin1,01800000)
Registersymbol(Poin1)

define(Poin2,01800000+4) //ArrPointer
Registersymbol(Poin2) //ArrPointer
define(Poin3,01800000+8)
Registersymbol(Poin3)
define(Poin4,01800000+c)
Registersymbol(Poin4)
define(Poin5,01800000+10)
Registersymbol(Poin5)
define(Poin6,01800000+14)
Registersymbol(Poin6)


Poin1:
dd 04000000
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"비효율적인 staticaddress"</Description>
      <LastState/>
      <Color>FF00FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(static1,01680100)
Registersymbol(static1)
define(closeCount,01680104)
Registersymbol(closeCount)

define(countw1,01680108)
Registersymbol(countw1)
define(countw2,0168010c)
Registersymbol(countw2)

acPath:
db '.\data\*.img' 00 00

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>39</ID>
      <Description>"Arr"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(Arr1,01900000)
Registersymbol(Arr1)
Poin2:
dd 01800004//Poin2 디파인 인식 불가 감안

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>38</ID>
          <Description>"ApiGate"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
PointerACC1:
mov [Poin1],ebx

mov edx,[Poin2]
mov [edx],ebx
add [Poin2],4
ret

SleepX:
push 80000000
call sleep
ret

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"EndPoint"</Description>
      <ShowAsHex>1</ShowAsHex>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Th"</Description>
      <LastState/>
      <Color>C0C0C0</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

define(debugapi,00501000)
Registersymbol(debugapi)




sizegetx:

label(sizelackstart)
label(restartDrowing)
label(end1)
label(goto2)
label(goto3)

label(Claer1)


push 0
push 0
push sizelackstart
push sizelackstart
push 4900//EroRr예측
push 0
call createThread
push eax
call closeh
ret

sizelackstart:
//시작

push 4800
push 0
lea eax,[ebp-4900-8]
push eax
call ntdll.memset
add esp,c
push dataget //
push acPath
call findx//findx
//////////end




mov [filehandles],eax //Handle
restartDrowing:
push 1
call sleep
lea ecx,[ebp-140]
push ecx
push [filehandles]
call fnext

lea ebx,[ebp-140] //ebx소모
add ebx,2c
mov ebx,[ebx]
test ebx,ebx
je nullp
xor edi,edi
goto2:
mov ecx,[acPath+edi-1]
inc edi
 //-1 주소를 감안한 주소다.
mov edx,[Poin1]
mov [edx+edi-2],ecx //ebp-2c pathname
cmp ecx,'.img'
jne goto2
mov edx,[Poin1]
mov [edx+edi-2],0//되기는 하는데 절대적인 문제 해결이 아니다. .img의 경로의 사이즈가 많아지면 수정
mov [edx+edi-3],0 //*을 지우는 것이기에 연산 속도가 비효율.
//.img가 바뀔떄 수정해야 할 요소.
//debug


xor esi,esi
label(ACFileter)
ACFileter:
lea ebx,[ebp-140] //ebx소모
add ebx,2c
mov esi,[countw1]

mov ebx,[ebx+esi]
test ebx,ebx
je nullp




mov edx,[Poin1]
add edx,esi
mov [edx+edi-3],ebx
add [countw1],1
cmp ebx,'.img'
jne ACFileter


Claer1:
//call SleepX
mov [countw1],0
cmp eax,0
je end1
lea ebx,[edx+esi]
test ebx,ebx
je nullp
add ebx,2

jmp 00981000

00981000:
mov [Poin1],ebx
mov edx,[Poin2]
mov [edx],ebx
add dword ptr [Poin2],04

jmp restartDrowing


end1:
push [filehandles]
call fcloseh
inc [closeCount]
ret

goto3://de

createThread(sizegetx)


[DISABLE]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"No description"</Description>
      <LastState RealAddress="04000000"/>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>String</VariableType>
      <Length>51</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>04000000</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"No description"</Description>
      <LastState ValueealAddress="04000000"/>
      <ShowAsHex>1</ShowAsHex>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Array of byte</VariableType>
      <ByteLength>245</ByteLength>
      <Address>04000000</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>97</Key>
          </Keys>
          <Value>00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
