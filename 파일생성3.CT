<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="38">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"iat"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(filea,KERNEL32.CreateFileA)
Registersymbol(filea)
define(wirte,KERNEL32.WriteFile)
Registersymbol(wirte)
define(CloseH,KERNEL32.CloseHandle)
Registersymbol(CloseH)
define(findx,KERNEL32.FindFirstFileA)
Registersymbol(findx)
//KERNEL32.CloseHandle
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"apidefine"</Description>
      <LastState Activated="1"/>
      <Color>FF00FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(mainx,00431000)
Registersymbol(mainx)
define(sizegetx,mainx+1000)
Registersymbol(sizegetx)


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"4byte static"</Description>
      <LastState Activated="1"/>
      <Color>FF00FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(sizes,00680100)
Registersymbol(sizes)


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"파일 생성기"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(createfilepath,48)
alloc(fool,128)
//staticalloc



define(memorycopy,00650000)
Registersymbol(memorycopy)

define(filehandle,00801000)
Registersymbol(filehandle)
//closeh


createfilepath:
db 'bigdata.dbvm'

00401000:
mov [sizes],#8000
push 0
push 00000080
push 02
push 0
push 03
push 40000000
push createfilepath
call filea
mov [filehandle],eax

push 0
push 0
push [sizes]
push memorycopy
push eax
call wirte
push [filehandle]
call CloseH

ret

createThread(00401000)


[DISABLE]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"loadMemory"</Description>
      <ShowAsHex>1</ShowAsHex>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Array of byte</VariableType>
      <ByteLength>10</ByteLength>
      <Address>memorycopy</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
